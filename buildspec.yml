version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
      nodejs: 18
    commands:
      - echo "Installing dependencies"
      - echo "Current directory: $(pwd)"
      - ls -la
      # Verify backend directory exists
      - |
        if [ ! -d "backend" ]; then
          echo "Error: backend directory not found"
          echo "Contents of current directory:"
          ls -la
          exit 1
        fi
      - cd backend
      - echo "Backend directory contents:"
      - ls -la
      - python -m venv .venv
      - . .venv/bin/activate
      - python -m pip install --upgrade pip
      - pip install -r requirements.txt
      - pip install -e .
      - cd ..

  pre_build:
    commands:
      - echo "Pre-build phase started"
      - echo "Current directory: $(pwd)"
      - |
        if [ ! -d "backend" ]; then
          echo "Error: backend directory not found"
          exit 1
        fi
      - cd backend
      - |
        cdk bootstrap --require-approval never \
          --context account=${AWS_ACCOUNT} \
          --context region=${AWS_REGION} \
          --context profile=${AWS_PROFILE} || true
      - cd ..

  build:
    commands:
      - echo "Build phase started"
      - echo "Current directory: $(pwd)"
      - |
        if [ ! -d "backend" ]; then
          echo "Error: backend directory not found"
          exit 1
        fi
      - cd backend
      - |
        if [ "$ACTION" = "destroy" ]; then
          cdk destroy --all --force --profile ${AWS_PROFILE} \
            -c env=${ENVIRONMENT} \
            -c account=${AWS_ACCOUNT} \
            -c region=${AWS_REGION} \
            -c profile=${AWS_PROFILE}
        else
          cdk synth --profile ${AWS_PROFILE} \
            -c env=${ENVIRONMENT} \
            -c account=${AWS_ACCOUNT} \
            -c region=${AWS_REGION} \
            -c profile=${AWS_PROFILE}

          cdk deploy --all --require-approval never --profile ${AWS_PROFILE} \
            -c env=${ENVIRONMENT} \
            -c account=${AWS_ACCOUNT} \
            -c region=${AWS_REGION} \
            -c profile=${AWS_PROFILE}
        fi
      - cd ..

      # Frontend deployment
      - |
        if [ "$ACTION" != "destroy" ] && [ -d "frontend" ]; then
          cd frontend
          echo "Frontend directory contents:"
          ls -la
          # Rest of frontend deployment...
          cd ..
        fi

  post_build:
    commands:
      - echo "Post-build phase started"
      - echo "Current directory: $(pwd)"
      - |
        if [ "$ACTION" != "destroy" ] && [ -d "backend" ]; then
          cd backend
          STACK_NAME="KUEssayGradingStack-${ENVIRONMENT}"
          
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name ${STACK_NAME} \
            --region ${AWS_REGION} \
            --profile ${AWS_PROFILE} \
            --query 'Stacks[0].Outputs[?OutputKey==`APIGatewayURL`].OutputValue' \
            --output text 2>/dev/null || echo "Not available")
            
          FRONTEND_URL=$(aws cloudformation describe-stacks \
            --stack-name ${STACK_NAME} \
            --region ${AWS_REGION} \
            --profile ${AWS_PROFILE} \
            --query 'Stacks[0].Outputs[?OutputKey==`FrontendURL`].OutputValue' \
            --output text 2>/dev/null || echo "Not available")
            
          echo "Deployment complete - Frontend: ${FRONTEND_URL}, API: ${API_URL}"
        else
          echo "Skipping post-build phase"
        fi

artifacts:
  files:
    - '**/*'
  base-directory: .
  name: ku-essay-grading-artifacts